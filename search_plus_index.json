{"./":{"url":"./","title":"Introduction","keywords":"","body":"react-smart-component gitbook app A gitbook generator for react-smart-component Usage Installation npm install gitbook-cli -g gitbook install Run gitbook serve access http://localhost:4000/ on your browser Copyright © react-smart-component 2017 all right reserved，powered by Gitbook该文件修订时间： 2017-10-07 17:52:45 "},"components/Sample/Sample.html":{"url":"components/Sample/Sample.html","title":"Sample","keywords":"","body":"react-native-smart-button A smart button for react-native apps, written in JS for cross-platform support. It works on iOS and Android. This component is compatible with React Native 0.25 and newer. Inspired by react-native-button Preview Installation npm install react-native-smart-button --save Live Demo demo1 Usage Install the package from npm with npm install react-native-smart-button --save. Then, require it from your app's JavaScript files with import Button from 'react-native-smart-button'. If you need use badge button, Install the badge from npm with npm install react-native-smart-badge --save. Then, require it from your app's JavaScript files with import Badge from 'react-native-smart-badge'. import React, {Component} from 'react' import { ScrollView, View, StyleSheet, Image, Text, ActivityIndicator, ActivityIndicatorIOS, ProgressBarAndroid, Platform, } from 'react-native' import TimerEnhance from 'react-native-smart-timer-enhance' import Button from 'react-native-smart-button' import image_liking from '../images/liking.png' import Badge from 'react-native-smart-badge' const styles = StyleSheet.create({ buttonStyle: { margin: 10, height: 40, backgroundColor: 'red', borderRadius: 3, borderWidth: StyleSheet.hairlineWidth, borderColor: 'red', justifyContent: 'center', }, buttonTextStyle: { fontSize: 17, color: 'white' }, buttonDisabledStyle: { backgroundColor: '#DDDDDD', borderWidth: 0, }, buttonDisabledTextStyle: { color: '#BCBCBC', }, }); class AllButton extends Component { // 构造 constructor (props) { super(props) // 初始状态 this.state = { btn_1_loading: false, btn_2_loading: false, btn_3_loading: false, btn_1_disabled: false, btn_2_disabled: false, btn_3_disabled: false, } } render () { return ( disabled (按钮禁用) opacity all (按钮透明) opacity content (内容透明) highlight (背景高亮) blur for ios (模糊阴影) loading (加载器) loading (加载器+文字) icon (图标) badge (徽章) 8 ) } _handlePress_1 = () => { this.setState({ btn_1_loading: true, // btn_1_disabled: true, }) this.setTimeout(() => { this.setState({ btn_1_loading: false, // btn_1_disabled: false }) }, 3000) } _handlePress_2 = () => { this.setState({ btn_2_loading: true, // btn_2_disabled: true, }) this.setTimeout(() => { this.setState({ btn_2_loading: false, // btn_2_disabled: false }) }, 3000) } _renderLoadingComponent_1 = () => { return this._renderActivityIndicator() } _renderLoadingComponent_2 = () => { return ( {this._renderActivityIndicator()} loading ) } _renderActivityIndicator() { return ActivityIndicator ? ( ) : Platform.OS == 'android' ? ( ) : ( ) } } export default TimerEnhance(AllButton) Props Prop Type Optional Default Description touchableType string Yes constants.fade determines what kind of style of the button should be when touch is active. activeOpacity number Yes 0.2 see react-native documents underlayColor color Yes see react-native documents style style Yes see react-native documents textStyle style Yes see react-native documents disabledStyle style Yes see react-native documents disabledTextStyle style Yes see react-native documents onPressIn func Yes see react-native documents onPressOut func Yes see react-native documents onPress func Yes see react-native documents onLayout func Yes see react-native documents disabled bool Yes see react-native documents loading bool Yes false determines the loading status of the button renderLoadingComponent func Yes determines render function which return the presentation to replaces the content when loading status of the button is true shadowOpacity number Yes 1 see react-native documents shadowColor color Yes '#fff' see react-native documents Copyright © react-smart-component 2017 all right reserved，powered by Gitbook该文件修订时间： 2017-10-07 21:35:43 "}}